name: Deploy stack to Portainer

on:
  workflow_call:
    inputs:
      portainer_user:
        type: string
        required: true
      endpoint_id:
        type: number
        required: true
      stack_name:
        type: string
        required: true
      stack_file:
        type: string
        required: true
      template:
        type: string
        default: '{}'
      repository:
        type: string
        default: ${{ github.repository }}
    secrets:
      portainer_host:
        required: true
      portainer_key:
        required: true
      gh_token:
        required: true
jobs:
  deploy-stack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkout target repository
        if: inputs.template == 'LATEST-VERSIONS'
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.gh_token }}
          repository: ${{ inputs.repository }}
          path: target

      - name: Fetch latest release data
        id: latest
        if: inputs.template == 'LATEST-VERSIONS'
        working-directory: target
        run: |
          git fetch --tags
          git fetch --prune --unshallow || true
          echo "::set-output name=release::$(git describe --abbrev=0 --tags)"
          echo "::set-output name=hash::$(git rev-parse --short HEAD)"
 
      - name: Set template output
        id: template
        if: inputs.template == 'LATEST-VERSIONS'
        run: |
          echo "::set-output name=variables::{\"stable\": \"${{ steps.latest.outputs.release }}\", \"beta\": \"${{ steps.latest.outputs.hash }}\"}"

      - name: Deploy stack to Portainer
        uses: carlrygart/portainer-stack-deploy@v1
        with:
          portainer-host: ${{ secrets.portainer_host }}
          username: ${{ inputs.portainer_user }}
          password: ${{ secrets.portainer_key }}
          endpoint-id: ${{ inputs.endpoint }}
          stack-name: ${{ inputs.stack_name }}
          stack-definition: ${{ inputs.stack_file }}
          template-variables: ${{ steps.template.outputs.variables || inputs.template }}
