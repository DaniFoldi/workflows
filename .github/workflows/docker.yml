name: Docker build container

on:
  workflow_call:
    inputs:
      registry_url:
        default: ghcr.io
        type: string
      registry_username:
        default: ${{ github.repository_owner }}
        type: string
      dockerfile:
        default: Dockerfile
        type: string
      dockerfile_target:
        default: app
        type: string
      build-timeout:
        default: 15
        type: number
    secrets:
      registry_password:
        required: true

jobs:
  build-container:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      timeout-minutes: 5
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

    - name: Set up QEMU
      timeout-minutes: 5
      uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3

    - name: Set up Docker Buildx
      timeout-minutes: 5
      id: buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3

    - name: Login to registry
      timeout-minutes: 5
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
      with:
        registry: ${{ inputs.registry_url }}
        username: ${{ inputs.registry_username }}
        password: ${{ secrets.registry_password }}

    - name: Get latest commit hash
      timeout-minutes: 5
      id: fetch-latest-hash
      run: echo "::set-output name=latest-hash::$(git rev-parse --short $GITHUB_SHA)"

    - name: Fetch latest release version
      timeout-minutes: 5
      id: fetch-latest-release
      uses: reloc8/action-latest-release-version@b8d6337f30390558e7874a044d6a3c1314314bab # 1.0.0

    - name: Lowercase repo name
      timeout-minutes: 5
      id: repo-name
      run: echo "::set-output name=lowercase-name::$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')"

    - name: Get container tags
      timeout-minutes: 5
      id: container-tags
      run: |
          if [ ${{ github.event_name }} == "release" ]
          then
            echo "::set-output name=tags::${{ inputs.registry_url }}/${{ steps.repo-name.outputs.lowercase-name }}:stable,${{ inputs.registry_url }}/${{ steps.repo-name.outputs.lowercase-name }}:${{ steps.fetch-latest-release.outputs.latest-release }}"
          else
            echo "::set-output name=tags::${{ inputs.registry_url }}/${{ steps.repo-name.outputs.lowercase-name }}:latest,${{ inputs.registry_url }}/${{ steps.repo-name.outputs.lowercase-name }}:${{ steps.fetch-latest-hash.outputs.latest-hash }}"
          fi

    - name: Build and push
      timeout-minutes: ${{ inputs.build-timeout }}
      id: docker-build
      uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: .
        file: ${{ inputs.dockerfile }}
        target: ${{ inputs.dockerfile_target }}
        push: true
        tags: ${{ steps.container-tags.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max